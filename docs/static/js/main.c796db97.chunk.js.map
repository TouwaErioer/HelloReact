{"version":3,"sources":["reportWebVitals.js","CommentInput.js","Comment.js","CommentList.js","CommentApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CommentInput","props","state","username","content","event","this","setState","target","value","onSubmit","className","onChange","handleUserNameChange","bind","handleContentChange","onClick","handleSubmit","Component","Comment","comment","date","CommentList","comments","map","i","defaultProps","CommentApp","alert","Date","toLocaleString","push","handleSubmitContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCoDCQ,E,kDAvDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,GACVC,QAAS,IAJE,E,wDAQnB,SAAqBC,GACjBC,KAAKC,SAAS,CACVJ,SAAUE,EAAMG,OAAOC,U,iCAI/B,SAAoBJ,GAChBC,KAAKC,SAAS,CACVH,QAASC,EAAMG,OAAOC,U,0BAI9B,WACI,GAAIH,KAAKL,MAAMS,SAAU,CAAC,IAAD,EACOJ,KAAKJ,MAA1BC,EADc,EACdA,SAAUC,EADI,EACJA,QACjBE,KAAKL,MAAMS,SAAS,CAACP,WAAUC,YAC/BE,KAAKC,SAAS,CACVH,QAAS,Q,oBAKrB,WACI,OACI,sBAAKO,UAAU,gBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAMA,UAAU,qBAAhB,sCACA,qBAAKA,UAAU,sBAAf,SACI,uBAAOF,MAAOH,KAAKJ,MAAMC,SAAUS,SAAUN,KAAKO,qBAAqBC,KAAKR,aAGpF,sBAAKK,UAAU,gBAAf,UACI,sBAAMA,UAAU,qBAAhB,4CACA,qBAAKA,UAAU,sBAAf,SACI,0BAAUF,MAAOH,KAAKJ,MAAME,QAASQ,SAAUN,KAAKS,oBAAoBD,KAAKR,aAGrF,qBAAKK,UAAU,uBAAf,SACI,wBAAQK,QAASV,KAAKW,aAAaH,KAAKR,MAAxC,mC,GAhDOY,aCcZC,E,4JAbX,WACI,OACI,sBAAKR,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,UACI,uBAAMA,UAAU,eAAhB,UAAgCL,KAAKL,MAAMmB,QAAQjB,SAAnD,OADJ,SAEI,8BAAMG,KAAKL,MAAMmB,QAAQhB,aAE7B,qBAAKO,UAAU,YAAf,SAA4BL,KAAKL,MAAMmB,QAAQC,c,GARzCH,aCChBI,E,4JAGF,WACI,OACI,8BACKhB,KAAKL,MAAMsB,SAASC,KAAI,SAACJ,EAASK,GAAV,OAAgB,cAAC,EAAD,CAASL,QAASA,GAAcK,Y,GAN/DP,aAApBI,EACKI,aAAe,CAACH,SAAU,IAWtBD,QCoBAK,E,kDA7BX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTqB,SAAU,IAHC,E,uDAOnB,SAAoBH,GAChB,GAAKA,EAAL,CACA,IAAKA,EAAQjB,SAAU,OAAOyB,MAAM,wCACpC,IAAKR,EAAQhB,QAAS,OAAOwB,MAAM,8CACnCR,EAAQC,MAAO,IAAIQ,MAAOC,iBAC1BxB,KAAKJ,MAAMqB,SAASQ,KAAKX,GAEzBd,KAAKC,SAAS,CACVa,QAASd,KAAKJ,MAAMqB,c,oBAI5B,WACI,OACI,sBAAKZ,UAAU,UAAf,UACI,cAAC,EAAD,CAAcD,SAAUJ,KAAK0B,oBAAoBlB,KAAKR,QACtD,cAAC,EAAD,CAAaiB,SAAUjB,KAAKJ,MAAMqB,kB,GAzBzBL,aCEzBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B9C,M","file":"static/js/main.c796db97.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react'\r\n\r\nclass CommentInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    handleUserNameChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleContentChange(event) {\r\n        this.setState({\r\n            content: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.props.onSubmit) {\r\n            const {username, content} = this.state;\r\n            this.props.onSubmit({username, content});\r\n            this.setState({\r\n                content: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='comment-input'>\r\n                <div className='comment-field'>\r\n                    <span className='comment-field-name'>用户名：</span>\r\n                    <div className='comment-field-input'>\r\n                        <input value={this.state.username} onChange={this.handleUserNameChange.bind(this)}/>\r\n                    </div>\r\n                </div>\r\n                <div className='comment-field'>\r\n                    <span className='comment-field-name'>评论内容：</span>\r\n                    <div className='comment-field-input'>\r\n                        <textarea value={this.state.content} onChange={this.handleContentChange.bind(this)}/>\r\n                    </div>\r\n                </div>\r\n                <div className='comment-field-button'>\r\n                    <button onClick={this.handleSubmit.bind(this)}>\r\n                        发布\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentInput;","import React, {Component} from 'react'\r\n\r\nclass Comment extends Component {\r\n    render() {\r\n        return (\r\n            <div className='comment'>\r\n                <div className='content'>\r\n                    <span className='comment-user'>{this.props.comment.username} </span>：\r\n                    <div>{this.props.comment.content}</div>\r\n                </div>\r\n                <div className='date-text'>{this.props.comment.date}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment","import React, {Component} from 'react'\r\nimport Comment from \"./Comment\";\r\n\r\nclass CommentList extends Component {\r\n    static defaultProps = {comments: []}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.comments.map((comment, i) => <Comment comment={comment} key={i}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentList;","import React, {Component} from 'react'\r\nimport CommentInput from './CommentInput'\r\nimport CommentList from './CommentList'\r\n\r\nclass CommentApp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    handleSubmitContent(comment) {\r\n        if (!comment) return;\r\n        if (!comment.username) return alert('请输入用户名');\r\n        if (!comment.content) return alert('请输入评论内容');\r\n        comment.date = new Date().toLocaleString();\r\n        this.state.comments.push(comment);\r\n        // 组件重新渲染\r\n        this.setState({\r\n            comment: this.state.comments\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <CommentInput onSubmit={this.handleSubmitContent.bind(this)}/>\r\n                <CommentList comments={this.state.comments}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport CommentApp from \"./CommentApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CommentApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}