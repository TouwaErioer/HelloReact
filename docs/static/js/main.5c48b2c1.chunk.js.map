{"version":3,"sources":["reportWebVitals.js","wrapWithLoadData.js","CommentInput.js","Comment.js","CommentList.js","CommentApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","wrapWithLoadData","WrappedComponent","name","props","state","data","loadData","localStorage","setItem","JSON","stringify","e","parse","getItem","this","saveData","bind","Component","CommentInput","username","content","event","setState","target","value","onSubmit","date","Date","textarea","focus","alert","className","onChange","handleUserNameChange","onBlur","handleUserNameBlur","handleContentChange","ref","onClick","handleSubmit","Comment","timeString","comment","duration","now","Math","round","max","_updateTimeString","_timer","setInterval","clearInterval","onDeleteComment","index","handleDeleteComment","propsType","PropTypes","object","isRequired","func","number","CommentList","comments","map","i","defaultProps","CommentApp","push","splice","handleSubmitContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c48b2c1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react'\r\n\r\nconst wrapWithLoadData = (WrappedComponent, name) => {\r\n    class LocalStorageActions extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: this.loadData()\r\n            };\r\n        }\r\n\r\n        saveData(data) {\r\n            try {\r\n                localStorage.setItem(name, JSON.stringify(data));\r\n            } catch (e) {\r\n                localStorage.setItem(name, data);\r\n            }\r\n        }\r\n\r\n        loadData(){\r\n            let data;\r\n            try{\r\n                data = JSON.parse(localStorage.getItem(name))\r\n            }catch (e) {\r\n                data = localStorage.getItem(name);\r\n            }\r\n            return data === null ? [] : data;\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <WrappedComponent\r\n                    data={this.state.data}\r\n                    saveData={this.saveData.bind(this)}\r\n                    {...this.props}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return LocalStorageActions;\r\n};\r\n\r\nexport default wrapWithLoadData;","import React, {Component} from 'react'\r\nimport wrapWithLoadData from \"./wrapWithLoadData\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CommentInput extends Component {\r\n\r\n    static propTypes = {\r\n        data: PropTypes.any.isRequired,\r\n        saveData: PropTypes.func.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: this.props.data,\r\n            content: ''\r\n        };\r\n    }\r\n\r\n    handleUserNameChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleContentChange(event) {\r\n        this.setState({\r\n            content: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.props.onSubmit) {\r\n            const {username, content} = this.state;\r\n            let date = +new Date();\r\n            this.props.onSubmit({username, content, date});\r\n            this.setState({content: ''})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textarea.focus();\r\n    }\r\n\r\n    handleUserNameBlur(event) {\r\n        let username = event.target.value;\r\n        if (username) {\r\n            this.props.saveData(username);\r\n        } else {\r\n            alert('请输入名称');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='comment-input'>\r\n                <div className='comment-field'>\r\n                    <span className='comment-field-name'>用户名：</span>\r\n                    <div className='comment-field-input'>\r\n                        <input value={this.state.username} onChange={this.handleUserNameChange.bind(this)}\r\n                               onBlur={this.handleUserNameBlur.bind(this)}/>\r\n                    </div>\r\n                </div>\r\n                <div className='comment-field'>\r\n                    <span className='comment-field-name'>评论内容：</span>\r\n                    <div className='comment-field-input'>\r\n                        <textarea value={this.state.content} onChange={this.handleContentChange.bind(this)}\r\n                                  ref={(textarea) => {\r\n                                      this.textarea = textarea}}/>\r\n                    </div>\r\n                </div>\r\n                <div className='comment-field-button'>\r\n                    <button onClick={this.handleSubmit.bind(this)}>\r\n                        发布\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCommentInput = wrapWithLoadData(CommentInput, \"username\");\r\nexport default CommentInput;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Comment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {timeString: ''}\r\n    }\r\n\r\n    static propsType = {\r\n        comment: PropTypes.object.isRequired,\r\n        onDeleteComment: PropTypes.func.isRequired,\r\n        index: PropTypes.number.isRequired\r\n    };\r\n\r\n    _updateTimeString() {\r\n        const comment = this.props.comment;\r\n        const duration = (+Date.now() - comment.date) / 1000;\r\n        this.setState({\r\n            timeString: duration > 60\r\n                ? `${Math.round(duration / 60)} 分钟前`\r\n                : `${Math.round(Math.max(duration, 1))} 秒前`\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._updateTimeString();\r\n        this._timer = setInterval(\r\n            this._updateTimeString.bind(this),\r\n            5000\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this._timer);\r\n    }\r\n\r\n    handleDeleteComment() {\r\n        if (this.props.onDeleteComment) {\r\n            this.props.onDeleteComment(this.props.index);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='comment'>\r\n                <div className='content'>\r\n                    <span className='comment-user'>{this.props.comment.username} </span>：\r\n                    <div>{this.props.comment.content}</div>\r\n                </div>\r\n                <div className='content'>\r\n                    <div className='del-button' onClick={this.handleDeleteComment.bind(this)}>删除</div>\r\n                    <div className='date-text'>{this.state.timeString}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment","import React, {Component} from 'react'\r\nimport Comment from \"./Comment\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CommentList extends Component {\r\n    static defaultProps = {comments: []};\r\n\r\n    static propsType = {\r\n        comment: PropTypes.object.isRequired,\r\n        onDeleteComment: PropTypes.func.isRequired\r\n    };\r\n\r\n    handleDeleteComment(index) {\r\n        if (this.props.onDeleteComment) {\r\n            this.props.onDeleteComment(index)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.comments.map((comment, i) => <Comment comment={comment} key={i} index={i}\r\n                                                                  onDeleteComment={this.handleDeleteComment.bind(this)}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentList;","import React, {Component} from 'react'\r\nimport CommentInput from './CommentInput'\r\nimport CommentList from './CommentList'\r\nimport wrapWithLoadData from \"./wrapWithLoadData\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass CommentApp extends Component {\r\n\r\n    static propTypes = {\r\n        data: PropTypes.any.isRequired,\r\n        saveData: PropTypes.func.isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {comments: this.props.data}\r\n    }\r\n\r\n    handleSubmitContent(comment) {\r\n        if (!comment) return;\r\n        if (!comment.username) return alert('请输入用户名');\r\n        if (!comment.content) return alert('请输入评论内容');\r\n        this.state.comments.push(comment);\r\n        const comments = this.state.comments;\r\n        this.setState({comment: comments});\r\n        this.props.saveData(comments);\r\n    }\r\n\r\n    handleDeleteComment(index) {\r\n        const comments = this.state.comments;\r\n        comments.splice(index, 1);\r\n        this.setState({comments});\r\n        this.props.saveData(comments);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <CommentInput onSubmit={this.handleSubmitContent.bind(this)}/>\r\n                <CommentList comments={this.state.comments} onDeleteComment={this.handleDeleteComment.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCommentApp = wrapWithLoadData(CommentApp, \"comments\");\r\nexport default CommentApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport CommentApp from \"./CommentApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CommentApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}